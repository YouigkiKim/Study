clear;clc;close all

sf = 5.5;
dtheta = 0.0; % rad
y_offset = 1.5;
max_kappa = 0.173;
length_ratio = 1.05;
road_width = 2.75;

% 경계조건
% 횡방향 곡선식을 3차곡선으로 구성
% sf는 곡선의 길이
% e_yaw(sf) = 0
% l(sf) = y_offset
% y_offset0 = 0
% e_yaw(0) = heading_angle - way_direction
% 결정줘야하는 것 -> 목표 yoffset, 곡선 길이
% 최대 곡률이 한계곡률보다 작을 떄까지 곡선 길이 늘림

% functions -param
c1 = @(dtheta_) tan(dtheta_);
c2 = @(c1_,sf_,d_) -2*c1_/sf_ + 3*d_/sf_^2;
c3 = @(c1_,c2_,sf_) -(c1_+2*c2_*sf_)/(3*sf_^2);
% functions -curve
f_l = @(c1_,c2_,c3_, s) (c1_.*s+c2_.*s.^2+c3_.*s.^3);
f_dlds = @(c1_,c2_,c3_,s) c1_+ 2*c2_.*s + 3*c3_.*s.^2;
f_ddlds = @(c2_, c3_, s) 2*c2_ + 6*c3_.*s;

s = 0:0.1:sf ;
c11 = c1(dtheta);
c21 = c2(c11, sf, y_offset);
c31 = c3(c11,c21,sf);
y1 = f_l(c11,c21,c31,s);
dlds1 = f_dlds(c11,c21, c31,s);
ddlds1 = f_ddlds(c21, c31,s);
theta1 = atan(dlds1);

sf2 = 4;
y_offset2=road_width;
dtheta2 = -0.05;
% c12 = c1(dtheta);
% c22 = c2(c12, sf2, y_offset2);
% c32 = c3(c12,c22,sf2,y_offset2);
% y2 = f_l(c12,c22,c32,s2);

sf1 = 3;
y_offset1 = road_width/2;
dtheta1 = 0.0;
[s1,y1,dlds1,ddlds1,theta1,kappa1] = getCurve(sf1,dtheta1,y_offset1);
while(abs(kappa1(1)) > max_kappa)
    sf1 = length_ratio* sf1; 
    [s1,y1,dlds1,ddlds1,theta1,kappa1] = getCurve(sf1,dtheta1,y_offset1);
end

[s2,y2,dlds2,ddlds2,theta2,kappa2] = getCurve(sf2,dtheta2,y_offset2);
while(abs(kappa2(1)) > max_kappa)
    sf2 = length_ratio* sf2; 
    [s2,y2,dlds2,ddlds2,theta2,kappa2] = getCurve(sf2,dtheta2,y_offset2);
end

plot(s2,y2, LineWidth=2);
xlim([ min(s2)-0.1 max(s2)+0.1])
ylim([ min(y2)-0.1 max(s2)+0.1])
xlabel('s (m)')
ylabel('y (m)')
title("Lateral Offset = 3 (m)")
grid on


figure
plot(s2 ,kappa2, LineWidth = 2);
hold on
plot(s2, theta2,LineWidth=2);
grid on
xlim([ min(s2) max(s2)])
ylim([ min(theta2)-0.3 max(theta2)+0.3])
xlabel('s (m)')
ylabel('rad (m)')
title("Curvilinear Coordinate framework")
legend("Curvature","Heading Angle", fontsize=12)

gca().FontSize = fontsize;


fontsize = 12;
figure
plot(s1, y1, LineWidth=2);
gca.FontSize = fontsize;
xlim([ min(s1)-0.1 max(s1)+0.1])
ylim([ min(y1)-0.1 max(s1)+0.1])
xlabel('s (m)')
ylabel('y (m)')
title("Lateral Offset = 1.5 (m)")



grid on

figure
plot(s1 ,kappa1, LineWidth=2);
hold on
plot(s1, theta1,LineWidth=2);
grid on
xlim([ min(s1) max(s1)])
ylim([ min(theta1)-0.3 max(theta1)+0.3])
xlabel('s (m)')
ylabel('rad (m)')
title("Curvilinear Coordinate framework")
legend("Curvature","Heading Angle", fontsize=12)
gca().FontSize = fontsize;



% figure
% kappa 계산

Q = sqrt(dlds1.^2 + 1);
kappa = (ddlds1)./Q.^3;
ds = 0.1;
dx = ds*cos(theta1);
dy = ds*sin(theta1);

for i=1:length(dx)
    x(i) = sum(dx(1:i));
end


% 
% plot(x,y1);
% hold on
% plot(x,y1, LineWidth = 2);
% 
% grid on
% xlim([0 sf])
% ylim([0 max(y1)])
% xlabel('x (m)')
% ylabel('y (m)')
% title("Curvilinear Coordinate framework")
% 
% figure
% plot(s,theta1, LineWidth = 2);
% hold on
% plot(s,kappa, LineWidth=2);
% grid on
% legend('Heading Angle', 'Curvature',fontsize =15)